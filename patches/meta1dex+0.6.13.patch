diff --git a/node_modules/meta1dex/dist/bitshares.js b/node_modules/meta1dex/dist/bitshares.js
index bd49731..583740d 100644
--- a/node_modules/meta1dex/dist/bitshares.js
+++ b/node_modules/meta1dex/dist/bitshares.js
@@ -36,6 +36,7 @@ var _lzmaDMin = require("lzma/src/lzma-d-min");
 var _bignumber = _interopRequireDefault(require("bignumber.js"));
 
 var _meta1js = require("meta1js");
+var _meta1jsWs = require("meta1js-ws");
 
 var Meta1 = /*#__PURE__*/function () {
   (0, _createClass2.default)(Meta1, null, [{
@@ -194,7 +195,7 @@ var Meta1 = /*#__PURE__*/function () {
             genPubKey,
             account,
             _args4 = arguments;
-        return _regenerator.default.wrap(function _callee4$(_context4) {
+        return _regenerator.default.wrap(async function _callee4$(_context4) {
           while (1) {
             switch (_context4.prev = _context4.next) {
               case 0:
@@ -204,10 +205,37 @@ var Meta1 = /*#__PURE__*/function () {
 
               case 3:                
                 acc = _context4.sent;
-                activeKey = _meta1js.PrivateKey.fromSeed("".concat(accountName, "active").concat(password));
+                acc = await _meta1jsWs.Apis.db.get_account_by_name(accountName);
+
+                activeKey = _meta1js.PrivateKey.fromSeed("".concat(accountName, "active").concat(password)); // in case of password login
+                genPubKey = activeKey.toPublicKey().toString();
+
+                var pass_val = acc.active.key_auths.filter( key => {
+                  return genPubKey == key[0];
+                });
+
+                if (pass_val.length > 0) {
+                  _context4.next = 8;
+                  break;
+                }
+
+                activeKey = _meta1js.PrivateKey.fromWif(password); // in case of wif private key login
                 genPubKey = activeKey.toPublicKey().toString();
 
-                if (!(genPubKey != acc.active.key_auths[0][0])) {
+                var active_val = acc.active.key_auths.filter( key => { 
+                  return genPubKey == key[0];
+                });
+
+                if (active_val.length > 0) {
+                  _context4.next = 8;
+                  break;
+                }
+
+                var owner_val = acc.owner.key_auths.filter( key => {
+                  return genPubKey == key[0];
+                });
+
+                if (owner_val.length > 0) {
                   _context4.next = 8;
                   break;
                 }
